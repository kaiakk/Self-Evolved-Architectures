#N canvas 166 23 1440 803 10;
#X declare -lib mrpeach;
#X obj 45 -77 unpackOSC;
#X obj 45 -50 pipelist;
#X floatatom 45 21 8 0 0 0 - - -;
#X floatatom 118 22 8 0 0 0 - - -;
#X floatatom 208 21 8 0 0 0 - - -;
#X floatatom 297 21 8 0 0 0 - - -;
#X floatatom 394 24 8 0 0 0 - - -;
#X floatatom 478 24 8 0 0 0 - - -;
#X floatatom 573 25 8 0 0 0 - - -;
#X floatatom 665 25 8 0 0 0 - - -;
#X obj 427 -221 import mrpeach;
#X obj 118 54 send eegtheta;
#X obj 208 54 s eeglowalpha;
#X obj 297 54 s eeghighalpha;
#X obj 394 53 s eeglowbeta;
#X obj 45 54 s eegdelta;
#X obj 478 53 s eeghighbeta;
#X obj 573 53 s eeglowgamma;
#X obj 665 51 s eegmidgamma;
#X floatatom 757 24 8 0 0 0 - - -;
#X obj 757 52 s signal;
#X text 53 -293 Receive EEG data from Neurosky ThinkGear bluetooth
sensor via opensoundcontrol using BrainOSC application (OSX and Windows).
These values represent the current magnitude of 8 commonly recognized
types of EEG (brainwaves). These values have no units and therefore
are only meaningful compared to each other and to themselves \, to
consider relative quantity and temporal fluctuations. By default \,
output of this Data Value is enabled \, and is typically output once
a second;
#X obj 467 -197 comport;
#X msg 346 -176 port 9998;
#X msg 171 -152 open 2;
#X obj 675 -87 comport;
#X msg 694 -123 ports;
#X msg 675 -154 open \$1;
#X obj 820 -118 hradio 15 1 0 8 empty empty empty 0 -8 0 10 -262144
-1 -1 0;
#X obj 714 -52 route ports;
#X obj 714 -23 print Ports;
#X text 823 -134 0;
#X text 854 -134 2;
#X text 883 -134 4;
#X text 838 -134 1;
#X text 869 -134 3;
#X text 898 -134 5;
#X text 913 -134 6;
#X text 929 -134 7;
#X msg 77 -145 port 9998;
#X msg 85 -127 port 4444;
#X msg 73 -166 port 9600;
#X floatatom 206 -51 5 0 0 0 - - -;
#X floatatom 283 -54 5 0 0 0 - - -;
#X floatatom 354 -55 5 0 0 0 - - -;
#X floatatom 439 -54 5 0 0 0 - - -;
#X floatatom 44 153 5 0 0 0 - - -;
#X obj 44 99 / 10000;
#X floatatom 44 230 5 0 0 0 - - -;
#X text 346 214 glissando duration (ms);
#X obj 315 336 phasor~;
#X floatatom 315 307 5 0 0 0 - - -;
#X floatatom 382 302 5 0 0 0 - - -;
#X obj 382 331 osc~;
#X obj 492 333 line~;
#X obj 492 308 pack 0 50;
#X obj 492 284 / 100;
#X floatatom 492 257 5 0 0 0 - - -;
#X obj 383 379 *~;
#X obj 267 414 +~;
#X obj 266 468 cos~;
#X obj 265 505 *~ 0.5;
#X obj 265 543 dac~;
#X text 315 263 Carrier;
#X text 317 283 Frequency;
#X text 378 278 Frequency;
#X text 376 259 Modulation;
#X text 483 226 in Hundredths;
#X floatatom 336 475 5 0 0 0 - - -;
#X floatatom 129 150 5 0 0 0 - - -;
#X obj 129 96 / 10000;
#X floatatom 129 226 5 0 0 0 - - -;
#X floatatom 207 152 5 0 0 0 - - -;
#X obj 207 98 / 10000;
#X floatatom 207 228 5 0 0 0 - - -;
#X obj 163 266 s a02;
#X msg 228 -152 port 7771;
#X obj 45 -107 udpreceive 7771;
#X msg 149 -179 host 127.0.0.1;
#X floatatom 494 -51 5 0 0 0 - - -;
#X floatatom 570 -33 5 0 0 0 - - -;
#X msg 389 444 0.5;
#X floatatom 631 -37 5 0 0 0 - - -;
#X floatatom 622 -67 5 0 0 0 - - -;
#X floatatom 619 -89 5 0 0 0 - - -;
#X msg 473 493 0;
#X obj 999 -93 s~ a01;
#X obj 906 197 fft~;
#X obj 920 404 *~ 10;
#X floatatom 944 375 5 0 0 0 - - -;
#X msg 921 479 0;
#N canvas 265 48 643 640 fft-analysis 0;
#X obj 15 164 *~;
#X obj 14 99 inlet~;
#X obj 15 218 rfft~;
#X obj 36 140 tabreceive~ \$0-hann;
#X obj 14 353 *~;
#X obj 56 353 *~;
#X obj 15 8 block~ 512 4;
#X text 85 88 The inlet~ now re-uses 3/4 of the previous block \, along
with the 128 new samples.;
#X text 221 141 window function as before.;
#X obj 76 196 tabreceive~ \$0-gain;
#X obj 77 225 *~;
#X obj 16 506 *~;
#X obj 37 481 tabreceive~ \$0-hann;
#X obj 77 283 /~ 768;
#X text 98 301 divide by 3N/2 (factor of N because rfft and rifft aren't
normalized \, and 3/2 is the gain of overlap-4 reconstruction when
Hann window function is applied twice.);
#X text 120 216 Just to show we're doing something \, we multiply each
channel by a gain controlled by an array in the main window. The control
is quartic-scaled for easy editing.;
#X obj 78 251 *~;
#X text 92 357 Multiply the (complex-valued) spectrum amplitudes by
the (real-valued) gain-and-normalization-factor;
#X obj 15 399 rifft~;
#X text 89 396 Real-valued inverse Fourier transform. This uses only
the first N/@ points of its inputs \, supplying the rest by symmetry
(so it's OK that rfft~ only puts out those N/2 points.) There's only
one outlet because the output is real-valued.;
#X obj 16 566 outlet~;
#X text 88 499 Multiply by the Hann window function again \, necessary
because the operation we performed might result in a signal that doesn't
go smoothly to zero at both ends.;
#X text 89 566 This repackages the output into 64-sample chunks for
the parent window. Since we're operating with an overlap \, the outlet~
object performs an overlapped sum of the blocks computed in this window.
;
#X text 129 8 block~ object specifies vector size of 512 and overlap
four. This window now computes blocks of 512 samples at intervals of
128 samples computed on the parent patch.;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 2 0 4 0;
#X connect 2 1 5 0;
#X connect 3 0 0 1;
#X connect 4 0 18 0;
#X connect 5 0 18 1;
#X connect 9 0 10 0;
#X connect 9 0 10 1;
#X connect 10 0 16 0;
#X connect 10 0 16 1;
#X connect 11 0 20 0;
#X connect 12 0 11 1;
#X connect 13 0 4 1;
#X connect 13 0 5 1;
#X connect 16 0 13 0;
#X connect 18 0 11 0;
#X restore 1080 -188 pd fft-analysis;
#X msg 954 450 0.5;
#X obj 928 28 /~ 0.5;
#X floatatom 1001 -34 5 0 0 0 - - -;
#X floatatom 1061 226 7 0 0 0 - - -;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-real 64 float 2;
#X coords 0 64 64 -64 256 200 1;
#X restore 1446 146 graph;
#X floatatom 1061 130 5 0 32 0 - - -;
#X obj 1101 202 samplerate~;
#X obj 1061 177 t f b;
#X obj 1061 202 *;
#X obj 1103 530 metro 250;
#X obj 1061 599 tabwrite~ \$0-real;
#X obj 1090 576 tabwrite~ \$0-imaginary;
#X obj 1061 346 osc~;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-imaginary 64 float 2;
#X coords 0 64 64 -64 256 200 1;
#X restore 1446 379 graph;
#X obj 1092 322 f;
#X floatatom 1114 278 3 0 100 0 - - -;
#X obj 1114 299 / 100;
#X obj 1061 153 / 64;
#X text 1618 127 real part;
#X text 1573 360 imaginary part;
#X obj 1103 507 loadbang;
#X text 1117 128 <- frequency;
#X text 1156 144 (as multiple;
#X text 1158 160 of SR/64 \, the;
#X text 1156 177 fundamental);
#X text 1193 307 of a cycle;
#X text 1454 600 updated for PD version 0.39;
#X obj 1112 552 s \$0-snap;
#X obj 1092 248 r \$0-snap;
#X text 1150 277 <- phase in;
#X text 1184 293 hundredths;
#X text 1136 226 <- frequency \, Hz.;
#X text 1110 377 given the real and imaginary part;
#X text 1111 393 of a complex-valued signal. Here;
#X text 1110 409 the imaginary part is zero (the;
#X text 1109 362 fft~ computes the Fourier transform \,;
#X text 1209 503 real and imaginary;
#X text 1209 519 outputs are graphed;
#X text 1208 536 separately.;
#X text 1109 426 input is real-valued). The output;
#X text 1108 444 is a (real \, imaginary) pair for each;
#X text 1109 462 frequency from 0 to 63 (in units of;
#X text 1110 482 SR/64).;
#X text 1168 -74 The "fft~" object has separate inlets for the real
and imaginary parts of a complex-valued signal and outputs its Fourier
transform \, again using separate outlets for the real and imaginary
part. The transform is done on one block of samples (here the block
size is 64 \, Pd's default.) The outputs give the complex amplitudes
of the harmonics of the input signal \, from DC up. The harmonics are
tuned to the fundamental frequency of the analysis \, 1/64th of the
sample rate. If the frequency (in harmonics) is an integer \, the result
is two harmonics symmetric about the Nyquist frequency. Fractional
frequencies spill across harmonics. Changing the initial phase rotates
energy from real to imaginary and back.;
#X text 1049 -62 ANALYSIS;
#X text 1050 -80 FOURIER;
#X msg 1061 41 0;
#X msg 1102 58 10;
#X msg 1097 85 10.5;
#X text 1182 245 bang-on-snapshot;
#X text 1180 259 from below;
#X text 1123 325 sync phase with snapshots;
#X obj 1060 385 fft~;
#X msg 1297 576 \; pd dsp 1;
#X obj 988 328 osc~;
#X obj 988 283 + 200;
#X floatatom 994 240 5 0 0 0 - - -;
#X obj 284 -147 routeOSC /meditation /attention /rawdata /eegdelta
/eegtheta /eeglowalpha /eeghighalpha /eeglowbeta /eeghighbeta /eeglowgamma
/eeghighgamma;
#X floatatom 636 -107 5 0 0 0 - - -;
#X floatatom 789 -217 5 0 0 0 - - -;
#X floatatom 789 -171 5 0 0 0 - - -;
#X obj 789 -194 / 10;
#X obj 865 -208 pack 0 500;
#X obj 865 -183 line 5 3000;
#X obj 1006 -134 osc~;
#X obj 372 531 s~ k01;
#X obj 973 -127 /~ 1;
#X floatatom 1057 -120 5 0 0 0 - - -;
#X floatatom 35 304 5 0 0 0 - - -;
#X floatatom 101 305 5 0 0 0 - - -;
#X floatatom 144 309 5 0 0 0 - - -;
#X floatatom 235 312 5 0 0 0 - - -;
#X obj 129 197 line 5 10;
#X obj 44 179 pack 0 500;
#X obj 129 172 pack 0 500;
#X obj 207 174 pack 0 500;
#X obj 207 198 line 5 100;
#X obj 45 203 line 5 100;
#X obj 135 340 s~ l03;
#X obj 83 340 s~ l02;
#X obj 32 340 s~ l01;
#X obj 33 268 * 1;
#X obj 99 269 * 1;
#X obj 190 320 * 1;
#X floatatom 237 378 5 0 0 0 - - -;
#X msg 209 381 -0.35;
#X msg 251 337 0.65;
#X obj 10 226 sin;
#X floatatom -1 259 5 0 0 0 - - -;
#X obj 80 241 sin;
#X floatatom 66 261 5 0 0 0 - - -;
#X obj 269 217 sin;
#X floatatom 258 250 5 0 0 0 - - -;
#X msg 245 292 8;
#X obj 44 126 + 0;
#X obj 129 123 + 0;
#X obj 207 125 + 0;
#X obj 382 154 * 10;
#X obj 382 126 + 10;
#X obj 446 156 * 10;
#X obj 446 128 + 10;
#X obj 504 154 * 10;
#X obj 504 126 + 10;
#X connect 0 0 1 0;
#X connect 0 1 1 1;
#X connect 1 0 149 0;
#X connect 2 0 15 0;
#X connect 2 0 47 0;
#X connect 3 0 11 0;
#X connect 3 0 70 0;
#X connect 4 0 12 0;
#X connect 4 0 73 0;
#X connect 5 0 13 0;
#X connect 6 0 14 0;
#X connect 7 0 16 0;
#X connect 8 0 17 0;
#X connect 9 0 18 0;
#X connect 19 0 20 0;
#X connect 25 1 29 0;
#X connect 26 0 25 0;
#X connect 27 0 25 0;
#X connect 28 0 27 0;
#X connect 29 0 30 0;
#X connect 39 0 77 0;
#X connect 40 0 77 0;
#X connect 41 0 77 0;
#X connect 45 0 2 0;
#X connect 46 0 165 0;
#X connect 47 0 186 0;
#X connect 48 0 179 0;
#X connect 50 0 59 0;
#X connect 51 0 50 0;
#X connect 52 0 53 0;
#X connect 53 0 58 0;
#X connect 54 0 58 1;
#X connect 55 0 54 0;
#X connect 56 0 55 0;
#X connect 57 0 56 0;
#X connect 58 0 59 1;
#X connect 59 0 60 0;
#X connect 60 0 61 0;
#X connect 60 0 157 0;
#X connect 61 0 62 0;
#X connect 61 0 62 1;
#X connect 68 0 61 1;
#X connect 69 0 166 0;
#X connect 70 0 187 0;
#X connect 71 0 75 0;
#X connect 71 0 181 0;
#X connect 72 0 167 0;
#X connect 73 0 188 0;
#X connect 74 0 183 0;
#X connect 76 0 77 0;
#X connect 77 0 0 0;
#X connect 78 0 77 0;
#X connect 80 0 3 0;
#X connect 81 0 61 1;
#X connect 82 0 4 0;
#X connect 85 0 61 1;
#X connect 87 0 88 0;
#X connect 89 0 88 1;
#X connect 94 0 93 1;
#X connect 95 0 104 0;
#X connect 97 0 109 0;
#X connect 98 0 100 1;
#X connect 99 0 100 0;
#X connect 99 1 98 0;
#X connect 100 0 95 0;
#X connect 101 0 102 0;
#X connect 101 0 103 0;
#X connect 101 0 119 0;
#X connect 104 0 144 0;
#X connect 106 0 104 1;
#X connect 107 0 108 0;
#X connect 108 0 106 1;
#X connect 109 0 99 0;
#X connect 112 0 101 0;
#X connect 112 0 145 0;
#X connect 120 0 106 0;
#X connect 138 0 97 0;
#X connect 139 0 97 0;
#X connect 140 0 97 0;
#X connect 144 0 102 0;
#X connect 144 1 103 0;
#X connect 147 0 104 0;
#X connect 148 0 147 1;
#X connect 149 0 42 0;
#X connect 149 1 43 0;
#X connect 149 2 44 0;
#X connect 149 2 93 0;
#X connect 149 3 45 0;
#X connect 149 4 79 0;
#X connect 149 5 80 0;
#X connect 149 6 82 0;
#X connect 149 7 83 0;
#X connect 149 8 84 0;
#X connect 149 9 150 0;
#X connect 149 10 151 0;
#X connect 151 0 153 0;
#X connect 152 0 154 0;
#X connect 153 0 152 0;
#X connect 154 0 155 0;
#X connect 155 0 156 0;
#X connect 156 0 158 0;
#X connect 158 0 86 0;
#X connect 159 0 158 1;
#X connect 160 0 172 0;
#X connect 161 0 171 0;
#X connect 162 0 170 0;
#X connect 163 0 173 1;
#X connect 163 0 174 1;
#X connect 163 0 175 1;
#X connect 164 0 71 0;
#X connect 164 0 192 0;
#X connect 165 0 169 0;
#X connect 166 0 164 0;
#X connect 167 0 168 0;
#X connect 168 0 74 0;
#X connect 168 0 194 0;
#X connect 169 0 48 0;
#X connect 169 0 190 0;
#X connect 173 0 160 0;
#X connect 174 0 161 0;
#X connect 175 0 162 0;
#X connect 177 0 163 0;
#X connect 178 0 163 0;
#X connect 179 0 180 0;
#X connect 180 0 173 0;
#X connect 181 0 182 0;
#X connect 182 0 174 0;
#X connect 183 0 184 0;
#X connect 184 0 175 0;
#X connect 185 0 163 0;
#X connect 186 0 46 0;
#X connect 187 0 69 0;
#X connect 188 0 72 0;
#X connect 189 0 51 0;
#X connect 190 0 189 0;
#X connect 191 0 52 0;
#X connect 192 0 191 0;
#X connect 193 0 57 0;
#X connect 194 0 193 0;
